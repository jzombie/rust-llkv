name: CodSpeed

on:
  push:
    branches:
      - "main" # or "master"
  pull_request: # required to have reports on PRs
  # `workflow_dispatch` allows CodSpeed to trigger backtest
  # performance analysis in order to generate initial data.
  workflow_dispatch:

jobs:
  codspeed:
    name: Run benchmarks

    # runs-on: ubuntu-latest
    runs-on: [self-hosted, macOS, ARM64]

    steps:
      - uses: actions/checkout@v4

      # Ensure rustup/cargo are available for the runner user and on PATH
      - name: Ensure rustup and cargo
        run: |
          set -euo pipefail
          if ! command -v rustup >/dev/null 2>&1; then
            curl -fsSL https://sh.rustup.rs | sh -s -- -y --profile minimal
          fi
          echo "$HOME/.cargo/bin" >> "$GITHUB_PATH"
          rustup --version
          cargo --version

      # (Optional) Verify perf permissions for instrumentation; non-fatal
      - name: Verify perf settings (non-fatal)
        run: |
          set -euo pipefail
          uname -a || true
          xcode-select -p || true
          xcrun xcodebuild -version || true
          xcrun xctrace version || true
          /usr/sbin/DevToolsSecurity -status || true

      - name: Setup rust toolchain, cache and cargo-codspeed binary
        uses: moonrepo/setup-rust@v0
        with:
          channel: stable
          cache-target: release
          bins: cargo-codspeed

      # Clone codspeed-runner over HTTPS (specific branch)
      - name: Clone codspeed-runner (branch)
        run: |
          set -euo pipefail
          git clone --depth 1 \
            --branch feature/prototype-macos-support \
            https://github.com/jzombie/codspeed-runner.git \
            codspeed-runner-src
          test -f codspeed-runner-src/scripts/simple-installer.sh

      # Replace CodSpeedHQ/action installer with the custom simple installer from the cloned repo
      - name: Install codspeed runner (custom)
        run: |
          set -euo pipefail
          mkdir -p "$HOME/.local/bin"
          bash codspeed-runner-src/scripts/simple-installer.sh \
            --install-dir "$HOME/.local/bin" \
            --quiet
          echo "$HOME/.local/bin" >> "$GITHUB_PATH"
          which codspeed
          codspeed --version

      - name: Build the benchmark target(s)
        run: cargo codspeed build

      - name: Run the benchmarks
        env:
          CODSPEED_TOKEN: ${{ secrets.CODSPEED_TOKEN }}
          CODSPEED_LOG: debug
        run: |
          set -euo pipefail
          codspeed run \
            --mode=instrumentation \
            --token "${CODSPEED_TOKEN:-}" \
            --working-directory "${GITHUB_WORKSPACE}" \
            -- 'cargo codspeed run'
