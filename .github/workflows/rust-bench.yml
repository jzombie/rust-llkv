name: CodSpeed

on:
  push:
    branches:
      - "main" # or "master"
  pull_request: # required to have reports on PRs
  # `workflow_dispatch` allows CodSpeed to trigger backtest
  # performance analysis in order to generate initial data.
  workflow_dispatch:

jobs:
  codspeed:
    name: Run benchmarks

    # runs-on: ubuntu-latest
    runs-on: [self-hosted, macOS, ARM64]

    steps:
      - uses: actions/checkout@v4

      - name: Setup rust toolchain, cache and cargo-codspeed binary
        uses: moonrepo/setup-rust@v0
        with:
          channel: stable
          cache-target: release
          bins: cargo-codspeed

      # Surface env issues on self-hosted macOS
      - name: Verify prerequisites (macOS)
        run: |
          set -x
          which cargo || true
          cargo --version
          which cargo-codspeed || true
          cargo codspeed --version || true
          which codspeed || true
          codspeed --version || true
          xcode-select -p || true
          xcrun xcodebuild -version || true
          xcrun xctrace version || true
          /usr/sbin/DevToolsSecurity -status || true

      # Install the CodSpeed runner and add it to PATH (self-hosted friendly)
      - name: Install CodSpeed runner CLI
        run: |
          set -Eeuo pipefail
          set -x

          : "${CODSPEED_RUNNER_VERSION:=latest}"

          # Quick connectivity/TLS sanity checks
          curl -I -fsSL https://github.com/ || (echo "GH reachability failed"; exit 2)
          curl -I -fsSL https://github.com/CodSpeedHQ/runner/releases/ || \
            (echo "Runner releases not reachable"; exit 3)

          install_script_url=""
          if [ "$CODSPEED_RUNNER_VERSION" = "latest" ]; then
            install_script_url="https://github.com/CodSpeedHQ/runner/releases/latest/download/codspeed-runner-installer.sh"
          else
            # Strip an optional leading 'v'
            v="${CODSPEED_RUNNER_VERSION#v}"
            install_script_url="https://github.com/CodSpeedHQ/runner/releases/download/v${v}/codspeed-runner-installer.sh"
            # Preflight to catch 404s explicitly
            curl -I -fsSL "https://github.com/CodSpeedHQ/runner/releases/download/v${v}/" >/dev/null
          fi

          # Download to a file so we can show verbose errors if it fails
          tmp="${RUNNER_TEMP:-/tmp}/codspeed-runner-installer.sh"
          curl -fSL "$install_script_url" -o "$tmp" || {
            echo "Download failed for: $install_script_url"
            echo "Retrying with verbose curl..."
            curl -vSL "$install_script_url" -o "$tmp"
            exit 4
          }

          bash "$tmp" --quiet

          # Put codspeed on PATH for the rest of the job
          echo "$HOME/.codspeed/bin" >> "$GITHUB_PATH"

      # Verify runner CLI actually installed and is usable
      - name: Verify codspeed runner CLI
        run: |
          set -Eeuo pipefail
          set -x
          ls -la "$HOME/.codspeed" || true
          ls -la "$HOME/.codspeed/bin" || true
          which codspeed || true
          codspeed --version

      - name: Build the benchmark target(s)
        run: cargo codspeed build

      # Ensure codspeed is on PATH and enable debug logs
      # Modified from: https://github.com/CodSpeedHQ/action/blob/main/action.yml
      - name: Run the benchmarks (inline, no action)
        env:
          CODSPEED_LOG: debug
          # Optional: set to 'instrumentation' or 'walltime'
          CODSPEED_MODE: instrumentation
          # Optional: token for private repos
          CODSPEED_TOKEN: ${{ secrets.CODSPEED_TOKEN }}
        run: |
          set -Eeuo pipefail
          which codspeed
          codspeed --version
          ARGS=()
          if [ -n "${CODSPEED_TOKEN:-}" ]; then
            ARGS+=("--token" "$CODSPEED_TOKEN")
          fi
          ARGS+=("--mode=${CODSPEED_MODE:-instrumentation}")
          # If you later add defaults.run.working-directory, either:
          #  - keep this step's working-directory, OR
          #  - pass --working-directory here.
          # Example:
          # ARGS+=("--working-directory=.")
          codspeed run "${ARGS[@]}" -- 'cargo codspeed run'
